<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.itcast.ssm.mapper2.EquipmentMapper" >
  <resultMap id="BaseResultMap" type="cn.itcast.ssm.po2.Equipment" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="number" property="number" jdbcType="VARCHAR" />
    <result column="type_id" property="typeId" jdbcType="INTEGER" />
    <result column="lifetime" property="lifetime" jdbcType="TIMESTAMP" />
    <result column="max" property="max" jdbcType="DECIMAL" />
    <result column="min" property="min" jdbcType="DECIMAL" />
    <result column="sampling_frequency" property="samplingFrequency" jdbcType="DECIMAL" />
    <result column="install_time" property="installTime" jdbcType="TIMESTAMP" />
    <result column="station_id" property="stationId" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, name, number, type_id, lifetime, max, min, sampling_frequency, install_time, 
    station_id
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="cn.itcast.ssm.po2.EquipmentExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from equipment
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from equipment
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from equipment
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="cn.itcast.ssm.po2.EquipmentExample" >
    delete from equipment
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.itcast.ssm.po2.Equipment" >
    insert into equipment (id, name, number, 
      type_id, lifetime, max, 
      min, sampling_frequency, install_time, 
      station_id)
    values (#{id,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{number,jdbcType=VARCHAR}, 
      #{typeId,jdbcType=INTEGER}, #{lifetime,jdbcType=TIMESTAMP}, #{max,jdbcType=DECIMAL}, 
      #{min,jdbcType=DECIMAL}, #{samplingFrequency,jdbcType=DECIMAL}, #{installTime,jdbcType=TIMESTAMP}, 
      #{stationId,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="cn.itcast.ssm.po2.Equipment" >
    insert into equipment
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="name != null" >
        name,
      </if>
      <if test="number != null" >
        number,
      </if>
      <if test="typeId != null" >
        type_id,
      </if>
      <if test="lifetime != null" >
        lifetime,
      </if>
      <if test="max != null" >
        max,
      </if>
      <if test="min != null" >
        min,
      </if>
      <if test="samplingFrequency != null" >
        sampling_frequency,
      </if>
      <if test="installTime != null" >
        install_time,
      </if>
      <if test="stationId != null" >
        station_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="number != null" >
        #{number,jdbcType=VARCHAR},
      </if>
      <if test="typeId != null" >
        #{typeId,jdbcType=INTEGER},
      </if>
      <if test="lifetime != null" >
        #{lifetime,jdbcType=TIMESTAMP},
      </if>
      <if test="max != null" >
        #{max,jdbcType=DECIMAL},
      </if>
      <if test="min != null" >
        #{min,jdbcType=DECIMAL},
      </if>
      <if test="samplingFrequency != null" >
        #{samplingFrequency,jdbcType=DECIMAL},
      </if>
      <if test="installTime != null" >
        #{installTime,jdbcType=TIMESTAMP},
      </if>
      <if test="stationId != null" >
        #{stationId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.itcast.ssm.po2.EquipmentExample" resultType="java.lang.Integer" >
    select count(*) from equipment
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update equipment
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.name != null" >
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.number != null" >
        number = #{record.number,jdbcType=VARCHAR},
      </if>
      <if test="record.typeId != null" >
        type_id = #{record.typeId,jdbcType=INTEGER},
      </if>
      <if test="record.lifetime != null" >
        lifetime = #{record.lifetime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.max != null" >
        max = #{record.max,jdbcType=DECIMAL},
      </if>
      <if test="record.min != null" >
        min = #{record.min,jdbcType=DECIMAL},
      </if>
      <if test="record.samplingFrequency != null" >
        sampling_frequency = #{record.samplingFrequency,jdbcType=DECIMAL},
      </if>
      <if test="record.installTime != null" >
        install_time = #{record.installTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.stationId != null" >
        station_id = #{record.stationId,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update equipment
    set id = #{record.id,jdbcType=INTEGER},
      name = #{record.name,jdbcType=VARCHAR},
      number = #{record.number,jdbcType=VARCHAR},
      type_id = #{record.typeId,jdbcType=INTEGER},
      lifetime = #{record.lifetime,jdbcType=TIMESTAMP},
      max = #{record.max,jdbcType=DECIMAL},
      min = #{record.min,jdbcType=DECIMAL},
      sampling_frequency = #{record.samplingFrequency,jdbcType=DECIMAL},
      install_time = #{record.installTime,jdbcType=TIMESTAMP},
      station_id = #{record.stationId,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.itcast.ssm.po2.Equipment" >
    update equipment
    <set >
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="number != null" >
        number = #{number,jdbcType=VARCHAR},
      </if>
      <if test="typeId != null" >
        type_id = #{typeId,jdbcType=INTEGER},
      </if>
      <if test="lifetime != null" >
        lifetime = #{lifetime,jdbcType=TIMESTAMP},
      </if>
      <if test="max != null" >
        max = #{max,jdbcType=DECIMAL},
      </if>
      <if test="min != null" >
        min = #{min,jdbcType=DECIMAL},
      </if>
      <if test="samplingFrequency != null" >
        sampling_frequency = #{samplingFrequency,jdbcType=DECIMAL},
      </if>
      <if test="installTime != null" >
        install_time = #{installTime,jdbcType=TIMESTAMP},
      </if>
      <if test="stationId != null" >
        station_id = #{stationId,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.itcast.ssm.po2.Equipment" >
    update equipment
    set name = #{name,jdbcType=VARCHAR},
      number = #{number,jdbcType=VARCHAR},
      type_id = #{typeId,jdbcType=INTEGER},
      lifetime = #{lifetime,jdbcType=TIMESTAMP},
      max = #{max,jdbcType=DECIMAL},
      min = #{min,jdbcType=DECIMAL},
      sampling_frequency = #{samplingFrequency,jdbcType=DECIMAL},
      install_time = #{installTime,jdbcType=TIMESTAMP},
      station_id = #{stationId,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>